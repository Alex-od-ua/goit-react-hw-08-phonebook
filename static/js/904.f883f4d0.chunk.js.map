{"version":3,"file":"static/js/904.f883f4d0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PhoneBook/ContactForm/ContactForm.module.css?3732","components/PhoneBook/ContactForm/ContactForm.js","Redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/PhoneBook/Filter/Filter.module.css?9e6f","components/PhoneBook/Filter/Filter.js","Redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/PhoneBook/ContactList/ContactList.module.css?4668","components/PhoneBook/ContactList/ContactList.js","webpack://react-homework-template/./src/components/PhoneBook/PhoneBook.module.css?b449","components/PhoneBook/PhoneBook.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact__form\":\"ContactForm_contact__form__0qSOs\",\"input__name\":\"ContactForm_input__name__oFGHL\",\"input__number\":\"ContactForm_input__number__649of\",\"input__btn\":\"ContactForm_input__btn__nuJot\",\"main__title\":\"ContactForm_main__title__mqo5I\"};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport {\n  fetchAllContacts,\n  fetchAddContact,\n} from 'Redux/contacts/contacts-operations';\n\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const [contact, setContacts] = useState({ name: '', number: '' });\n\n  const dispatch = useDispatch();\n\n  const { name, number } = contact;\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    setContacts(prevValue => {\n      return { ...prevValue, [name]: value };\n    });\n  };\n\n  const handleAddContact = event => {\n    event.preventDefault();\n\n    const newContactItem = { name, number };\n\n    dispatch(fetchAddContact(newContactItem));\n\n    reset();\n  };\n\n  const reset = () => {\n    setContacts({ name: '', number: '' });\n  };\n\n  return (\n    <>\n      <h1 className={css.main__title}>Phonebook</h1>\n      <form className={css.contact__form} onSubmit={handleAddContact}>\n        <label htmlFor={nameInputId}>\n          Name\n          <input\n            className={css.input__name}\n            placeholder=\"exemple: Rosie Simpson\"\n            type=\"text\"\n            name=\"name\"\n            id={nameInputId}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <label htmlFor={numberInputId}>\n          Number\n          <input\n            className={css.input__number}\n            placeholder=\"exemple: 123-12-12\"\n            type=\"tel\"\n            name=\"number\"\n            id={numberInputId}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.input__btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__title\":\"Filter_filter__title__Ov5Tr\",\"filter__input\":\"Filter_filter__input__Kaj+8\",\"filter__item\":\"Filter_filter__item__veoKo\",\"main__title\":\"Filter_main__title__rpOuy\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from 'Redux/filter/filter-slice';\nimport { getFilter } from 'Redux/filter/filter-selectors';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <>\n      <h2 className={css.main__title}>Contacts</h2>\n      <div className={css.filter__item}>\n        <h3 className={css.filter__title}>Find contacts by name</h3>\n        <input\n          className={css.filter__input}\n          type=\"text\"\n          value={filter}\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          onChange={handleFilterChange}\n        />\n      </div>\n    </>\n  );\n};\n","export const getContacts = state => state.contacts.items;\n\nexport const getFilteredContacts = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__QVXfk\",\"contact__item\":\"ContactList_contact__item__fI5Qj\",\"contact__name\":\"ContactList_contact__name__9b3uK\",\"contact__btn\":\"ContactList_contact__btn__hDDBt\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchDeleteContact } from 'Redux/contacts/contacts-operations';\nimport {\n  getFilteredContacts,\n  getContacts,\n} from 'Redux/contacts/contacts-selectors';\n\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilteredContacts);\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = Id => {\n    dispatch(fetchDeleteContact(Id));\n  };\n\n  const filteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n\n    const filteredItem = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return filteredItem;\n  };\n\n  const contactsItem = filteredContacts();\n\n  console.log(contactsItem);\n\n  return (\n    <ul className={css.contact__list}>\n      {contactsItem.map(({ id, name, phone }) => (\n        <li key={id} className={css.contact__item}>\n          <p className={css.contact__name}>\n            {name} : {phone}\n          </p>\n          <button\n            type=\"button\"\n            className={css.contact__btn}\n            onClick={() => handleDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"PhoneBook_phonebook__VE+ya\"};","import { ContactForm } from 'components/PhoneBook/ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactList/ContactList';\n\nimport css from './PhoneBook.module.css';\n\nexport function PhoneBook() {\n  return (\n    <div className={css.phonebook}>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { PhoneBook } from 'components/PhoneBook/PhoneBook';\n\nconst ContactsPage = () => {\n  return <PhoneBook />;\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","useState","name","number","contact","setContacts","dispatch","useDispatch","nameInputId","nanoid","numberInputId","useEffect","fetchAllContacts","handleInputChange","event","currentTarget","value","prevValue","reset","className","css","onSubmit","preventDefault","newContactItem","fetchAddContact","htmlFor","placeholder","type","id","pattern","title","required","onChange","getFilter","filter","Filter","useSelector","setFilter","getContacts","state","contacts","items","getFilteredContacts","ContactList","contactsItem","toLowerCase","includes","console","log","map","phone","onClick","Id","fetchDeleteContact","PhoneBook"],"sourceRoot":""}